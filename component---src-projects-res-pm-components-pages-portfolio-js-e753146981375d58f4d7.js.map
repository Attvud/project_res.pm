{"version":3,"sources":["webpack:///./src/projects/res_pm/components/pages/portfolio.js","webpack:///./src/graphql-static-queries/portfolio-pages.js"],"names":["PageStyle","styled","div","theme","background_primary","text_secondary","Portfolio","props","PortfolioPagesData","useStaticQuery","allMdx","edges","title","pages","portfolio","description","canonical","seo","siteUrl","openGraph","url","location","href","images","openGraphImageUrl","replace","width","height","alt","siteSeoPrefix","className","HomePageCover","bg","style","maxWidth","as","map","node","slug","key","frontmatter","image","getImage","cover","caption"],"mappings":"+QAWMA,EAAYC,IAAOC,IAAV,2EAAGD,CAAH,+qBAqBW,qBAAGE,MAAkBC,sBAUhC,qBAAGD,MAAkBE,kBAuBrB,SAASC,EAAUC,GAChC,IAAMC,EC/DaC,yBAAe,cAA1BC,OAyCMC,MDwBd,OACE,oCACE,kBAAC,YAAD,CACEC,MAAOC,QAAMC,UAAUF,MACvBG,YAAaF,QAAMC,UAAUC,YAC7BC,UAAWC,MAAIC,QACfC,UAAW,CACTC,IAAKb,EAAMc,SAASC,KACpBV,MAAOC,QAAMC,UAAUF,MACvBG,YAAaF,QAAMC,UAAUC,YAC7BQ,OAAQ,CACN,CACEH,IAAI,GAAIb,EAAMc,SAASC,KAAOE,IAAkBC,QAC9C,KACA,IAEFC,MAAO,KACPC,OAAQ,IACRC,IAAKX,MAAIY,mBAKjB,kBAAC,IAAD,CAAQC,UAAU,gCAChB,iCACE,kBAACC,EAAA,EAAD,CAAeC,IAAI,GACjB,wBAAIF,UAAU,+BAAd,aACA,uBACEA,UAAU,mCACVG,MAAO,CAAEC,SAAU,UAFrB,oFASJ,kBAAClC,EAAD,CAAWmC,GAAG,UAAUL,UAAU,mBAChC,yBAAKA,UAAU,cACZtB,EAAmB4B,KAClB,gBAAGC,EAAH,EAAGA,KAAH,MACgB,4BAAdA,EAAKC,MACH,uBACEhB,KAAI,IAAMe,EAAKC,KAAKb,QAAQ,YAAa,IACzCK,UAAU,OACVS,IAAKF,EAAKC,MAEV,kBAAC,IAAD,CACEV,IAAKS,EAAKG,YAAY5B,MACtB6B,MAAOC,YAASL,EAAKG,YAAYG,OACjCb,UAAU,0BAEZ,wBAAIA,UAAU,WAAWO,EAAKG,YAAYI","file":"component---src-projects-res-pm-components-pages-portfolio-js-e753146981375d58f4d7.js","sourcesContent":["import { seo, pages } from \"projectSettings\"\r\nimport React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\r\nimport Layout from \"globalLayoutsIndexPage\"\r\nimport styled from \"styled-components\"\r\nimport HomePageCover from \"projectOrganisms/HomePageCover\"\r\nimport { usePortfolioPages } from \"globalGraphqlStaticQueries/portfolio-pages\"\r\nimport openGraphImageUrl from \"projectSrc/assets/open-graph/default.jpg\"\r\n\r\nconst PageStyle = styled.div`\r\n  margin-top: 16px;\r\n  .items-list {\r\n    display: grid;\r\n    grid-gap: 16px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    @media (max-width: 992px) {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n  }\r\n  .item {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    margin-bottom: 24px;\r\n    .cover {\r\n      border-radius: 4px;\r\n      background-color: ${({ theme }) => theme.background_primary};\r\n      /* box-shadow: 1px 0px 0px ${({ theme }) => theme.separator_non_opaque},\r\n        -1px 0px 0px ${({ theme }) => theme.separator_non_opaque},\r\n        0px 1px 0px ${({ theme }) => theme.separator_non_opaque},\r\n        0px -1px 0px ${({ theme }) => theme.separator_non_opaque}; */\r\n    }\r\n    .caption {\r\n      font-size: 26px;\r\n      line-height: 32px;\r\n      font-weight: normal;\r\n      color: ${({ theme }) => theme.text_secondary};\r\n      margin: 24px;\r\n      max-width: 640px;\r\n      @media (max-width: 1400px) {\r\n        font-size: 22px;\r\n        line-height: 28px;\r\n      }\r\n      @media (max-width: 992px) {\r\n        font-size: 26px;\r\n        line-height: 32px;\r\n      }\r\n      @media (max-width: 992px) {\r\n        font-size: 22px;\r\n        line-height: 28px;\r\n      }\r\n      @media (max-width: 576px) {\r\n        font-size: 18px;\r\n        line-height: 23px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Portfolio(props) {\r\n  const PortfolioPagesData = usePortfolioPages()\r\n\r\n  return (\r\n    <>\r\n      <GatsbySeo\r\n        title={pages.portfolio.title}\r\n        description={pages.portfolio.description}\r\n        canonical={seo.siteUrl}\r\n        openGraph={{\r\n          url: props.location.href,\r\n          title: pages.portfolio.title,\r\n          description: pages.portfolio.description,\r\n          images: [\r\n            {\r\n              url: `${props.location.href}${openGraphImageUrl.replace(\r\n                /\\//,\r\n                \"\"\r\n              )}`,\r\n              width: 1200,\r\n              height: 630,\r\n              alt: seo.siteSeoPrefix,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n      <Layout className=\"theme-background-quarternary\">\r\n        <section>\r\n          <HomePageCover bg={false}>\r\n            <h1 className=\"xxxLarge-high-title fw-bold\">Portfolio</h1>\r\n            <p\r\n              className=\"xxxLarge-h1 theme-text-secondary\"\r\n              style={{ maxWidth: \"768px\" }}\r\n            >\r\n              I have posted less than 10% of my works. You can contact me for\r\n              more examples.\r\n            </p>\r\n          </HomePageCover>\r\n        </section>\r\n        <PageStyle as=\"article\" className=\"container-fluid\">\r\n          <div className=\"items-list\">\r\n            {PortfolioPagesData.map(\r\n              ({ node }) =>\r\n                node.slug !== \"content/portfolio/test/\" && (\r\n                  <a\r\n                    href={`/${node.slug.replace(/content\\//, \"\")}`}\r\n                    className=\"item\"\r\n                    key={node.slug}\r\n                  >\r\n                    <GatsbyImage\r\n                      alt={node.frontmatter.title}\r\n                      image={getImage(node.frontmatter.cover)}\r\n                      className=\"cover ratio ratio-4x3\"\r\n                    />\r\n                    <h2 className=\"caption\">{node.frontmatter.caption}</h2>\r\n                  </a>\r\n                )\r\n            )}\r\n          </div>\r\n        </PageStyle>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nexport const usePortfolioPages = () => {\r\n  const { allMdx } = useStaticQuery(\r\n    graphql`\r\n      query PortfolioPages {\r\n        allMdx(\r\n          filter: { slug: { regex: \"/portfolio//\" } }\r\n          sort: { fields: slug, order: DESC }\r\n        ) {\r\n          edges {\r\n            node {\r\n              id\r\n              slug\r\n              excerpt\r\n              body\r\n              frontmatter {\r\n                title\r\n                caption\r\n                categories\r\n                slug\r\n                tags\r\n                cover {\r\n                  childImageSharp {\r\n                    gatsbyImageData(\r\n                      quality: 100\r\n                      placeholder: TRACED_SVG\r\n                      formats: [AUTO, WEBP, AVIF]\r\n                    )\r\n                  }\r\n                }\r\n                extra {\r\n                  workExternalLink {\r\n                    name\r\n                    href\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n  return allMdx.edges\r\n}\r\n"],"sourceRoot":""}